{"ast":null,"code":"var _jsxFileName = \"/Users/abhishyant/Documents/Projects/Personal/songboard/client/src/content/add_song/add_song.tsx\";\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SectionHeader from \"components/section_header/section_header\";\nimport \"content/add_song/add_song.css\";\nimport { URLTYPE } from \"types\";\n/*\nContract\n  * requires:\n  * ensures:\n    * user enters text onto textfield which gets set as state\n    * On button click\n      * validates link as a valid link of the following types\n        * Spotify\n        * Soundcloud\n        * Youtube\n      * Creates a link with the matching type\n      * Calls given onclick method in props\n    *  \n*/\n\nclass AddSong extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\"\n    };\n    this.onTextChange = this.onTextChange.bind(this);\n    this.onPlusClick = this.onPlusClick.bind(this);\n  }\n\n  get URL() {\n    return this.state.url;\n  }\n\n  determineURLType(url) {\n    if (url.includes(\"spotify\")) {\n      return URLTYPE.SPOTIFY;\n    }\n\n    if (url.includes(\"soundcloud\")) {\n      return URLTYPE.SOUNDCLOUD;\n    }\n\n    if (url.includes(\"youtube\")) {\n      return URLTYPE.YOUTUBE;\n    }\n\n    return URLTYPE.ERROR;\n  }\n\n  onPlusClick() {\n    let urlType = this.determineURLType(this.state.url);\n    console.log(\"REACHED\");\n\n    if (urlType !== URLTYPE.ERROR) {\n      let link = {\n        url: this.state.url,\n        urlType: urlType\n      };\n      this.props.onPlusClick(link);\n    }\n  }\n\n  onTextChange(e) {\n    this.setState({\n      url: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(SectionHeader, {\n      title: \"Add a Song\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add-song\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      fullWidth: true,\n      onChange: this.onTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add-button\",\n      id: \"add-button\",\n      onClick: this.onPlusClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"Add\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default AddSong;","map":{"version":3,"sources":["/Users/abhishyant/Documents/Projects/Personal/songboard/client/src/content/add_song/add_song.tsx"],"names":["React","Component","TextField","Fab","AddIcon","SectionHeader","URLTYPE","AddSong","constructor","props","state","url","onTextChange","bind","onPlusClick","URL","determineURLType","includes","SPOTIFY","SOUNDCLOUD","YOUTUBE","ERROR","urlType","console","log","link","e","setState","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SectionHeader from \"components/section_header/section_header\";\nimport \"content/add_song/add_song.css\";\nimport { URLTYPE, Link } from \"types\";\n\n/*\nContract\n  * requires:\n  * ensures:\n    * user enters text onto textfield which gets set as state\n    * On button click\n      * validates link as a valid link of the following types\n        * Spotify\n        * Soundcloud\n        * Youtube\n      * Creates a link with the matching type\n      * Calls given onclick method in props\n    *  \n*/\ntype AddSongProps = {\n  onPlusClick: (link: Link) => void;\n};\n\ntype AddSongState = {\n  url: string;\n};\n\nclass AddSong extends Component<AddSongProps, AddSongState> {\n  constructor(props: AddSongProps) {\n    super(props);\n    this.state = {\n      url: \"\"\n    };\n    this.onTextChange = this.onTextChange.bind(this);\n    this.onPlusClick = this.onPlusClick.bind(this);\n  }\n\n  get URL(): string {\n    return this.state.url;\n  }\n\n  determineURLType(url: string): URLTYPE {\n    if (url.includes(\"spotify\")) {\n      return URLTYPE.SPOTIFY;\n    }\n    if (url.includes(\"soundcloud\")) {\n      return URLTYPE.SOUNDCLOUD;\n    }\n    if (url.includes(\"youtube\")) {\n      return URLTYPE.YOUTUBE;\n    }\n    return URLTYPE.ERROR;\n  }\n\n  onPlusClick() {\n    let urlType: URLTYPE = this.determineURLType(this.state.url);\n    console.log(\"REACHED\");\n    if (urlType !== URLTYPE.ERROR) {\n      let link: Link = {\n        url: this.state.url,\n        urlType: urlType\n      };\n      this.props.onPlusClick(link);\n    }\n  }\n\n  onTextChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      url: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"add-container\">\n          <SectionHeader title=\"Add a Song\" />\n        </div>\n        <div className=\"add-song\">\n          <div className=\"add-text\">\n            <TextField fullWidth={true} onChange={this.onTextChange} />\n          </div>\n          <div\n            className=\"add-button\"\n            id=\"add-button\"\n            onClick={this.onPlusClick}\n          >\n            <Fab color=\"primary\" aria-label=\"Add\" size=\"small\">\n              <AddIcon />\n            </Fab>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddSong;\n"]},"metadata":{},"sourceType":"module"}