{"ast":null,"code":"var _jsxFileName = \"/Users/abhishyant/Documents/Projects/Personal/songboard/client/src/components/songframe/songframe.tsx\";\nimport React from 'react';\nimport { URLTYPE } from '../../types';\nimport SpotifyFrame from '../spotifyframe/spotifyframe';\nimport YoutubeFrame from '../youtubeframe/youtubeframe';\nimport SoundcloudFrame from '../soundcloudframe/soundcloudframe';\n/*\nContract\nrequire:\n  * a songLink of type Link with a valid url and a type of URLTYPE \nensure:\n  * Returns the correct frame for the type of url passed in\n    * URLTYPE.SPOTIFY - SpotifyFrame\n    * URLTYPE.YOUTUBE - YoutubeFrame\n    * URLTYPE.SOUNDCLOUD - SoundcloudFrame\n*/\n\nclass SongFrame extends React.Component {\n  render() {\n    return this.loadFromSongType();\n  }\n\n  loadFromSongType() {\n    if (this.props.songlink.urlType === URLTYPE.SPOTIFY) {\n      return React.createElement(SpotifyFrame, {\n        url: this.props.songlink.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    } else if (this.props.songlink.urlType === URLTYPE.YOUTUBE) {\n      return React.createElement(YoutubeFrame, {\n        url: this.props.songlink.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    } else if (this.props.songlink.urlType === URLTYPE.SOUNDCLOUD) {\n      return React.createElement(SoundcloudFrame, {\n        url: this.props.songlink.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default SongFrame;","map":{"version":3,"sources":["/Users/abhishyant/Documents/Projects/Personal/songboard/client/src/components/songframe/songframe.tsx"],"names":["React","URLTYPE","SpotifyFrame","YoutubeFrame","SoundcloudFrame","SongFrame","Component","render","loadFromSongType","props","songlink","urlType","SPOTIFY","url","YOUTUBE","SOUNDCLOUD"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAA8B,aAA9B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAGA;;;;;;;;;;;AAiBA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAmD;AACjDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKC,gBAAL,EAAP;AACD;;AAEDA,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,KAAgCV,OAAO,CAACW,OAA5C,EAAqD;AACnD,aACE,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD,MAKK,IAAI,KAAKJ,KAAL,CAAWC,QAAX,CAAoBC,OAApB,KAAgCV,OAAO,CAACa,OAA5C,EAAqD;AACxD,aACE,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWC,QAAX,CAAoBG,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJI,MAKA,IAAI,KAAKJ,KAAL,CAAWC,QAAX,CAAoBC,OAApB,KAAgCV,OAAO,CAACc,UAA5C,EAAwD;AAC3D,aACE,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,QAAX,CAAoBG,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACF;;AArBgD;;AAwBnD,eAAeR,SAAf","sourcesContent":["import React from 'react'\nimport { URLTYPE, Link } from '../../types'\nimport SpotifyFrame from '../spotifyframe/spotifyframe'\nimport YoutubeFrame from '../youtubeframe/youtubeframe'\nimport SoundcloudFrame from '../soundcloudframe/soundcloudframe'\n\n\n/*\nContract\nrequire:\n  * a songLink of type Link with a valid url and a type of URLTYPE \nensure:\n  * Returns the correct frame for the type of url passed in\n    * URLTYPE.SPOTIFY - SpotifyFrame\n    * URLTYPE.YOUTUBE - YoutubeFrame\n    * URLTYPE.SOUNDCLOUD - SoundcloudFrame\n*/\n\n\ntype Props = {\n  songlink: Link\n}\n\n\nclass SongFrame extends React.Component<Props, {}> {\n  render() {\n    return this.loadFromSongType()\n  }\n\n  loadFromSongType() {\n    if (this.props.songlink.urlType === URLTYPE.SPOTIFY) {\n      return (\n        <SpotifyFrame url={this.props.songlink.url} />\n      )\n    }\n    else if (this.props.songlink.urlType === URLTYPE.YOUTUBE) {\n      return (\n        <YoutubeFrame url={this.props.songlink.url} />\n      )\n    }\n    else if (this.props.songlink.urlType === URLTYPE.SOUNDCLOUD) {\n      return (\n        <SoundcloudFrame url={this.props.songlink.url} />\n      )\n    }\n  }\n}\n\nexport default SongFrame;"]},"metadata":{},"sourceType":"module"}